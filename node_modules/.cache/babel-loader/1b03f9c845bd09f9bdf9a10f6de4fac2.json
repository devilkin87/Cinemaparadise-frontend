{"ast":null,"code":"import axios from \"axios\";\nconst MOVIE_KEY = \"MOVIE_KEY\";\nconst LOGIN_USER_KEY = \"WD_FORUM_LOGIN_USER_KEY\";\nvar baseURL; // if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//   baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\n//   baseURL = \"http://127.0.0.1:8000/\";\n// }\n\nbaseURL = 'https://cinema-paradise1-backend.herokuapp.com/';\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common[\"Authorization\"] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = params => {\n      return api.get(\"/posts/\", {\n        params\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n\n    this.addPost = postBody => {\n      const formData = new FormData();\n\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n\n      return api.post(\"/posts/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n    };\n\n    this.deletePost = id => {\n      return api.delete(`/posts/delete/${id}/`).catch(error => {\n        throw new Error(error);\n      });\n    };\n\n    this.getMovies = async params => {\n      let url = \"/movies/\";\n      let query = new URLSearchParams();\n\n      for (const key in params) {\n        if (params[key] != null) {\n          query.append(key, params[key]);\n        }\n      }\n\n      if (query.toString() !== \"\") {\n        url += \"?\" + query.toString();\n      }\n\n      const places = await api.get(url).then(response => {\n        console.log(response.data);\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return places;\n    };\n\n    this.getMovie = async id => {\n      const movies = await api.get(\"/movies/\" + id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return movies;\n    };\n  }\n\n}","map":{"version":3,"names":["axios","MOVIE_KEY","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","params","get","then","response","data","catch","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getMovies","url","query","URLSearchParams","toString","places","log","getMovie","movies"],"sources":["/Users/techi.s./Desktop/CinemaParadise-main/frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\nconst MOVIE_KEY = \"MOVIE_KEY\";\nconst LOGIN_USER_KEY = \"WD_FORUM_LOGIN_USER_KEY\";\n\nvar baseURL;\n// if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//   baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\n//   baseURL = \"http://127.0.0.1:8000/\";\n// }\n baseURL = 'https://cinema-paradise1-backend.herokuapp.com/';\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n      config.headers.common[\"Authorization\"] = JSON.parse(\n        localStorage.getItem(LOGIN_USER_KEY)\n      ).token;\n    }\n\n    return config;\n  },\n  (err) => {\n    console.error(err);\n  }\n);\n\nexport default class API {\n  getPosts = (params) => {\n    return api\n      .get(\"/posts/\", { params })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n  };\n  addPost = (postBody) => {\n    const formData = new FormData();\n\n    for (const key in postBody) {\n      formData.append(key, postBody[key]);\n    }\n\n    return api\n      .post(\"/posts/add/\", formData)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n  };\n  deletePost = (id) => {\n    return api.delete(`/posts/delete/${id}/`).catch((error) => {\n      throw new Error(error);\n    });\n  };\n\n  //////////////////////////////// movies ////////////////////////////////\n\n  //     getMovies = async () => {\n  //         let url = '/movies/';\n  //         const movies = await api\n  //             .get(url)\n  //             .then(response => {\n  //                 return response.data;\n  //             })\n  //             .catch(error => {\n  //                 throw new Error(error.message);\n  //             });\n  //         return movies;\n  //     };\n  // }\n\n  getMovies = async (params) => {\n    let url = \"/movies/\";\n    let query = new URLSearchParams();\n    for (const key in params) {\n      if (params[key] != null) {\n        query.append(key, params[key]);\n      }\n    }\n\n    if (query.toString() !== \"\") {\n      url += \"?\" + query.toString();\n    }\n    const places = await api\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return places;\n  };\n\n  getMovie = async (id) => {\n    const movies = await api\n      .get(\"/movies/\" + id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return movies;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}